
@{
    ViewBag.Title = "Index";
}
<div ng-app="Test4" ng-controller="myCtrl4">
    <h1>Directives</h1>
    <ul>
        <li ng-repeat="x in names">
            {{ x }}
        </li>
    </ul>
    <ul>
        <li ng-repeat="x in objects">
            {{ x.FirstName + " " + x.LastName }}
        </li>
    </ul>
</div>

<div id="test3" ng-app="Test3" ng-controller="myCtrl3">
    <h1>Expressions</h1>
    First Name: <input type="text" ng-model="firstName" /><br />
    Last Name: <input type="text" ng-model="lastName" /><br />
    <br />
    Full Name {{firstName + " " + lastName}}
    <br />
    Quantity * Cost = {{ quantity * cost}}
    <br />
    myObject.height {{myObject.height}}
    <br />
    myObject.face.eyes {{myObject.face.eyes}}
    <br />
</div>

<div ng-app="" ng-init="firstName='Arf'">
    <h1>Intro 2</h1>
    <p>Name : <input type="text" ng-model="name" /></p>
    <p ng-bind="name"></p>

    <p>The name is <span ng-bind="firstName"></span></p>

    <p>My first expression {{ 5+5 }}</p>
</div>


<div ng-app="">
    <h1>Intro 1</h1>
    <p>Name : <input type="text" ng-model="name" /></p>
    <h1>Hello {{name}}</h1>
</div>

<script>
    var app4 = angular.module('Test4', []);
    app4.controller('myCtrl4', function ($scope) {
        $scope.names = ["John", 'Andy', 'Reggie'];
        $scope.objects = [{ FirstName: 'Ken', LastName: 'Jennings' }, { FirstName: 'Alex', LastName: 'Scriven' }, { FirstName: 'Jesse', LastName: 'Varga' }];
    });
    var app3 = angular.module('Test3', []);
    app3.controller('myCtrl3', function ($scope) {
        $scope.firstName = "John";
        $scope.lastName = "Doe";
        $scope.quantity = 10;
        $scope.cost = 5;
        $scope.myObject = {face: {eyes: 'Blue', hair: 'Blonde'},height: 5}
    });
    //You gotta bootstrap any additional ng-app's because you gotta, 
    //  only one angular js can automatically be bootstrapped per html document
    //  the first ng-app found in the document will be the one auto-bootstrapped
    angular.bootstrap(document.getElementById("test3"), ['Test3']);
</script>